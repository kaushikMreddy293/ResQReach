openapi: 3.0.0
info:
  version: "1.0.0"
  title: Leftover Food API
servers:
  - url: https://localhost:3001
    description: Production server
components:
  schemas:
    FoodItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
          format: int32
        expiration_date:
          type: string
          format: date
        is_collected:
          type: boolean
          description: Indicates whether the food item has been collected

    FoodItemInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the leftover food item
        description:
          type: string
          description: Description of the leftover food item
        quantity:
          type: integer
          format: int32
          description: Quantity of the leftover food item
        expiration_date:
          type: string
          format: date
          description: Expiration date of the leftover food item

    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          type: string
          description: Name or identifier of the user who posted the review
        rating:
          type: integer
          description: Rating given to the leftover food item (1-5)
        comment:
          type: string
          description: Comment or feedback on the leftover food item

    ReviewInput:
      type: object
      properties:
        user:
          type: string
          description: Name or identifier of the user posting the review
        rating:
          type: integer
          description: Rating given to the leftover food item (1-5)
        comment:
          type: string
          description: Comment or feedback on the leftover food item

    UserProfile:
      type: object
      properties:
        username:
          type: string
          description: User's username or identifier
        followers:
          type: array
          items:
            type: string
          description: List of usernames following the user
        following:
          type: array
          items:
            type: string
          description: List of usernames the user is following

    Error:
      type: object
      properties:
        message:
          type: string
paths:
  /leftoverfood:
    get:
      summary: Get all available leftover food items
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FoodItem'
    post:
      summary: Post a new leftover food item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItemInput'
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItem'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /leftoverfood/{id}:
    get:
      summary: Get details of a specific leftover food item by ID
      parameters:
        - name: id
          in: path
          description: ID of the leftover food item to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItem'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update details of a specific leftover food item by ID
      parameters:
        - name: id
          in: path
          description: ID of the leftover food item to update
          required: true
          schema:
            type: integer
        - name: updatedFoodItem
          in: requestBody
          description: Updated details of the leftover food item
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItemInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItem'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a specific leftover food item by ID
      parameters:
        - name: id
          in: path
          description: ID of the leftover food item to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Resource deleted successfully
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /leftoverfood/collect/{id}:
    put:
      summary: Mark a specific leftover food item as collected
      parameters:
        - name: id
          in: path
          description: ID of the leftover food item to mark as collected
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItem'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /leftoverfood/collected:
    get:
      summary: Get all collected leftover food items
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FoodItem'

  /leftoverfood/filter:
    get:
      summary: Filter available leftover food items based on criteria
      parameters:
        - name: name
          in: query
          description: Name of the leftover food item to filter
          schema:
            type: string
        - name: expiration_date
          in: query
          description: Expiration date to filter
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FoodItem'

  /leftoverfood/{id}/reviews:
    get:
      summary: Get all reviews for a specific leftover food item by ID
      parameters:
        - name: id
          in: path
          description: ID of the leftover food item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /leftoverfood/{id}/reviews/post:
    post:
      summary: Post a review for a specific leftover food item by ID
      parameters:
        - name: id
          in: path
          description: ID of the leftover food item
          required: true
          schema:
            type: integer
        - name: review
          in: requestBody
          description: The details of the review
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewInput'
      responses:
        '201':
          description: Review posted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/profile:
    get:
      summary: Get the user's profile details
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /user/follow/{username}:
    put:
      summary: Follow another user
      parameters:
        - name: username
          in: path
          description: Username of the user to follow
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/unfollow/{username}:
    put:
      summary: Unfollow another user
      parameters:
        - name: username
          in: path
          description: Username of the user to unfollow
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/followed/items:
    get:
      summary: Get all leftover food items posted by followed users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FoodItem'


